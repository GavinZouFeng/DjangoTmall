"""
Django settings for DjangoTmall project.

Generated by 'django-admin startproject' using Django 1.9.13.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys
from django.core.urlresolvers import reverse_lazy

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


sys.path.insert(0, os.path.join(BASE_DIR,'apps'))
sys.path.insert(0, os.path.join(BASE_DIR,'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '8phzg#sxa95oiadm7mnl!k87(rz$tl*m$+f#enw3#!3d06-qc7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    # 'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'xadmin',
    'crispy_forms',
    'reversion',
    'captcha',
    'rest_framework',
    'notifications',

    'users',
    'products',
    'orders',
    'operations',
    'salers',
    'utils',
]


AUTH_USER_MODEL = "users.UserProfile"


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoTmall.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

                'django.template.context_processors.media', # {{ MEDIA_URL }}

                #     自定义的全局变量
                'apps.users.global_variable.global_variable',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoTmall.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "django_tmall",
        'USER': 'djangotmall',
        'PASSWORD': "djangotmall321",
        'HOST': "127.0.0.1"
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, "static"),
# )

STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

ADMINS = (
    ("赖键锋","whirlys@163.com"),
)

LANGUAGES = (
    ('en', ('English')),
    ('zh-hans', ('Chinese')),
)



# 验证码配置
# CAPTCHA_FONT_PATH
# CAPTCHA_FONT_SIZE
# CAPTCHA_IMAGE_SIZE = 213
# CAPTCHA_LETTER_ROTATION
# CAPTCHA_BACKGROUND_COLOR
# CAPTCHA_FOREGROUND_COLOR
# CAPTCHA_CHALLENGE_FUNCT
# CAPTCHA_MATH_CHALLENGE_OPERATOR
# CAPTCHA_NOISE_FUNCTIONS
# CAPTCHA_FILTER_FUNCTIONS
# CAPTCHA_WORDS_DICTIONARY
# CAPTCHA_FLITE_PATH
# CAPTCHA_TIMEOUT
# CAPTCHA_LENGTH
# CAPTCHA_DICTIONARY_MIN_LENGTH
# CAPTCHA_DICTIONARY_MAX_LENGTH
# CAPTCHA_OUTPUT_FORMAT
# CAPTCHA_TEST_MODE
# CAPTCHA_GET_FROM_POOL
# CAPTCHA_GET_FROM_POOL_TIMEOUT



# 如果登录成功后，next的值为空，则重定向到 LOGIN_REDIRECT_URL
LOGIN_REDIRECT_URL = reverse_lazy('index')
LOGIN_URL = reverse_lazy('login')
#LOGOUT_URL = reverse_lazy('logout')
LOGOUT_URL = reverse_lazy('index')




REST_FRAMEWORK = {
       'DEFAULT_PERMISSION_CLASSES': [
'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
       ]
}


# 日志

# DJANGO_LOG_LEVEL=DEBUG

#
# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         }, # 针对 DEBUG = True 的情况
#     },
#     'formatters': {
#         'standard': {
#             'format': '%(levelname)s %(asctime)s %(filename)s  %(module)s %(funcName)s %(lineno)d: %(message)s' # %(pathname)s
#         }, # 对日志信息进行格式化，每个字段对应了日志格式中的一个字段，更多字段参考官网文档，我认为这些字段比较合适，输出类似于下面的内容
#         # INFO 2016-09-03 16:25:20,067 /home/ubuntu/mysite/views.py views.py views get 29: some info...
#     },
#     'handlers': {
#         'mail_admins': {
#             'level': 'ERROR',
#             'class': 'django.utils.log.AdminEmailHandler',
#              'formatter':'standard'
#         },
#         'file_handler': {
#              'level': 'DEBUG',
#              'class': 'logging.handlers.TimedRotatingFileHandler',
#              'filename': 'E:\小旋锋的文件\大三下-课程\django仿天猫\DjangoTmall\log\log.log',
#              'formatter':'standard'
#         }, # 用于文件输出
#         'console':{
#             'level': 'INFO',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'standard'
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers' :['file_handler', 'console'],
#             'level':'DEBUG',
#             'propagate': True # 是否继承父类的log信息
#         }, # handlers 来自于上面的 handlers 定义的内容
#         'django.request': {
#             'handlers': ['mail_admins'],
#             'level': 'ERROR',
#             'propagate': False,
#         },
#     }
# }



# 发送邮件相关设置
# QQ邮箱貌似不太稳定
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.qq.com'
# EMAIL_HOST_USER = 'whirlys@qq.com'
# EMAIL_HOST_PASSWORD = 'mwmxatuctdtefhaf'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# DEFAULT_FROM_EMAIL = 'whirlys@qq.com'


# 通知设置
NOTIFICATIONS_SOFT_DELETE = True